{"ast":null,"code":"var _jsxFileName = \"/Users/ugurcan/Desktop/projectmarathon/project-messaging/messaging-frontend/src/components/chatScreen.jsx\";\nimport React from \"react\";\nimport './chatScreen.css';\nimport { FiSend } from 'react-icons/fi';\nimport socket from \"../socket\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class ChatScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: [],\n      yourMessage: \"\"\n    };\n    this.messageScreenRef = /*#__PURE__*/React.createRef();\n    this.buttonRef = /*#__PURE__*/React.createRef();\n  }\n\n  displayMessage(message) {\n    const div = document.createElement('div');\n    const innerDiv = document.createElement('p');\n    innerDiv.className = `messageText`;\n    innerDiv.innerHTML = `${message.content}`;\n    div.appendChild(innerDiv);\n    div.className = `message ${message.sender === socket.userName ? \"me\" : \"other\"}`;\n    this.messageScreenRef.current.appendChild(div);\n  }\n\n  componentDidMount() {\n    socket.on('get-message', message => this.displayMessage(message));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: this.messageScreenRef,\n        id: \"messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"controller\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: event => {\n            this.setState({\n              yourMessage: event.target.value\n            });\n          },\n          type: \"text\",\n          placeholder: \"Enter your message...\",\n          id: \"message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"send\",\n          children: /*#__PURE__*/_jsxDEV(FiSend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 39\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/Users/ugurcan/Desktop/projectmarathon/project-messaging/messaging-frontend/src/components/chatScreen.jsx"],"names":["React","FiSend","socket","ChatScreen","Component","constructor","props","state","messages","yourMessage","messageScreenRef","createRef","buttonRef","displayMessage","message","div","document","createElement","innerDiv","className","innerHTML","content","appendChild","sender","userName","current","componentDidMount","on","render","event","setState","target","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;;AAGA,eAAe,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AACpDC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,EADD;AAETC,MAAAA,WAAW,EAAE;AAFJ,KAAb;AAIA,SAAKC,gBAAL,gBAAwBV,KAAK,CAACW,SAAN,EAAxB;AACA,SAAKC,SAAL,gBAAiBZ,KAAK,CAACW,SAAN,EAAjB;AACH;;AACDE,EAAAA,cAAc,CAACC,OAAD,EAAS;AACnB,UAAMC,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAZ;AACA,UAAMC,QAAQ,GAAGF,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAjB;AACAC,IAAAA,QAAQ,CAACC,SAAT,GAAsB,aAAtB;AACAD,IAAAA,QAAQ,CAACE,SAAT,GAAsB,GAAEN,OAAO,CAACO,OAAQ,EAAxC;AACAN,IAAAA,GAAG,CAACO,WAAJ,CAAgBJ,QAAhB;AACAH,IAAAA,GAAG,CAACI,SAAJ,GAAiB,WAAUL,OAAO,CAACS,MAAR,KAAmBrB,MAAM,CAACsB,QAA1B,GAAqC,IAArC,GAA0C,OAAQ,EAA7E;AACA,SAAKd,gBAAL,CAAsBe,OAAtB,CAA8BH,WAA9B,CAA0CP,GAA1C;AAGH;;AACDW,EAAAA,iBAAiB,GAAE;AACfxB,IAAAA,MAAM,CAACyB,EAAP,CAAU,aAAV,EAAwBb,OAAO,IAAI,KAAKD,cAAL,CAAoBC,OAApB,CAAnC;AACH;;AACDc,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAK,QAAA,GAAG,EAAE,KAAKlB,gBAAf;AAAiC,QAAA,EAAE,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,EAAE,EAAC,YAAR;AAAA,gCACI;AAAO,UAAA,QAAQ,EAAGmB,KAAD,IAAS;AACtB,iBAAKC,QAAL,CAAc;AAACrB,cAAAA,WAAW,EAAEoB,KAAK,CAACE,MAAN,CAAaC;AAA3B,aAAd;AACH,WAFD;AAEG,UAAA,IAAI,EAAC,MAFR;AAEe,UAAA,WAAW,EAAC,uBAF3B;AAEmD,UAAA,EAAE,EAAC;AAFtD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAQ,UAAA,EAAE,EAAC,MAAX;AAAA,iCAAkB,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA,oBADJ;AAaH;;AAtCmD","sourcesContent":["import React from \"react\";\nimport './chatScreen.css';\nimport { FiSend } from 'react-icons/fi';\nimport socket from \"../socket\";\n\n\nexport default class ChatScreen extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            messages: [],\n            yourMessage: \"\"\n        }\n        this.messageScreenRef = React.createRef();\n        this.buttonRef = React.createRef();\n    }\n    displayMessage(message){\n        const div = document.createElement('div');\n        const innerDiv = document.createElement('p');\n        innerDiv.className = `messageText`;\n        innerDiv.innerHTML = `${message.content}`;\n        div.appendChild(innerDiv);\n        div.className = `message ${message.sender === socket.userName ? \"me\":\"other\"}`;\n        this.messageScreenRef.current.appendChild(div);\n        \n        \n    }\n    componentDidMount(){\n        socket.on('get-message',message => this.displayMessage(message));\n    }\n    render() {\n        return (\n            <>\n                <div ref={this.messageScreenRef} id=\"messages\">\n                    \n                </div>\n                <div id=\"controller\">\n                    <input onChange={(event)=>{\n                        this.setState({yourMessage: event.target.value})\n                    }} type=\"text\" placeholder=\"Enter your message...\" id=\"message\" />\n                    <button id=\"send\"><FiSend/></button>\n                </div>\n            </>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}