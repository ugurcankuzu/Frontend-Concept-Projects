{"ast":null,"code":"var _jsxFileName = \"/Users/ugurcan/Desktop/projectmarathon/project-messaging/messaging-frontend/src/components/chatScreen.jsx\";\nimport React from \"react\";\nimport './chatScreen.css';\nimport { FiSend } from 'react-icons/fi';\nimport socket from \"../socket\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class ChatScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: [],\n      yourMessage: \"\"\n    };\n    this.messageScreenRef = /*#__PURE__*/React.createRef();\n    this.buttonRef = /*#__PURE__*/React.createRef();\n    this.inputRef = /*#__PURE__*/React.createRef();\n  }\n\n  displayMessage(message) {\n    const div = document.createElement('div');\n    const innerDiv = document.createElement('p');\n    innerDiv.className = `messageText`;\n    innerDiv.innerHTML = `${message.content}`;\n    div.appendChild(innerDiv);\n    div.className = `message ${message.sender === socket.userName ? \"me\" : \"other\"}`;\n    this.messageScreenRef.current.appendChild(div);\n  }\n\n  componentDidMount() {\n    socket.on('get-message', message => this.displayMessage(message));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: this.messageScreenRef,\n        id: \"messages\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message me\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"messageText\",\n            children: \"benim yaz\\u0131m\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message other\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"messageText\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"controller\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ref: this.inputRef,\n          onChange: event => {\n            this.setState({\n              yourMessage: event.target.value\n            });\n          },\n          type: \"text\",\n          placeholder: \"Enter your message...\",\n          id: \"message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            socket.emit('send-message', this.state.yourMessage);\n            this.inputRef.current.value = \"\";\n          },\n          id: \"send\",\n          children: /*#__PURE__*/_jsxDEV(FiSend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/Users/ugurcan/Desktop/projectmarathon/project-messaging/messaging-frontend/src/components/chatScreen.jsx"],"names":["React","FiSend","socket","ChatScreen","Component","constructor","props","state","messages","yourMessage","messageScreenRef","createRef","buttonRef","inputRef","displayMessage","message","div","document","createElement","innerDiv","className","innerHTML","content","appendChild","sender","userName","current","componentDidMount","on","render","event","setState","target","value","emit"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport './chatScreen.css';\nimport { FiSend } from 'react-icons/fi';\nimport socket from \"../socket\";\n\n\n\nexport default class ChatScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            messages: [],\n            yourMessage: \"\"\n        }\n        this.messageScreenRef = React.createRef();\n        this.buttonRef = React.createRef();\n        this.inputRef = React.createRef();\n    }\n    displayMessage(message) {\n\n        const div = document.createElement('div');\n        const innerDiv = document.createElement('p');\n        innerDiv.className = `messageText`;\n        innerDiv.innerHTML = `${message.content}`;\n        div.appendChild(innerDiv);\n        div.className = `message ${message.sender === socket.userName ? \"me\" : \"other\"}`;\n        this.messageScreenRef.current.appendChild(div);\n\n    }\n    componentDidMount() {\n        socket.on('get-message', message => this.displayMessage(message));\n    }\n    render() {\n        return (\n            <>\n                <div ref={this.messageScreenRef} id=\"messages\">\n                    <div className=\"message me\">\n                        <p className=\"messageText\">benim yazÄ±m</p>\n                    </div>\n                    <div className=\"message other\">\n                        <p className=\"messageText\"></p>\n                    </div>\n                </div>\n                <div id=\"controller\">\n                    <input ref={this.inputRef} onChange={(event) => {\n                        this.setState({ yourMessage: event.target.value })\n                    }} type=\"text\" placeholder=\"Enter your message...\" id=\"message\" />\n                    <button onClick={() => {\n                        socket.emit('send-message', this.state.yourMessage);\n                        this.inputRef.current.value = \"\";\n                    }} id=\"send\"><FiSend /></button>\n                </div>\n            </>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}